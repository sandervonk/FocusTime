function doClassSelect(){let e=getClassJSON(),t=$('[data-role="task-info-tag"]').html("<option disabled selected hidden value=''>Choose a Class</option>");delete e.other,e.other="Other",console.log(e);for(let a of Object.keys(e))t.append(`<option value="${a}">${e[a]}</option>`)}function docFromCashe(){return{exists:!0,data:function(){return JSON.parse(localStorage["user-data"])}}}function sortByDate(e,t){let a=!e.date||e.is_pinned||"priority"==e.date||"top"==e.date,s=a||!t.is_raised&&new Date(e.date).getTime()<new Date(t.date).getTime();return s?-1:1}function pinTask(e){try{taskData=JSON.parse(e.attr("data-task-json-content")),task_is_pinned=e.hasClass("pinned");let t=db.collection("users").doc(auth.currentUser.uid),a=db.batch();a.update(t,{tasks:firebase.firestore.FieldValue.arrayRemove(taskData)}),a.update(t,{tasks:firebase.firestore.FieldValue.arrayUnion({...taskData,is_pinned:!task_is_pinned})}),a.commit().then(()=>{e.toggleClass("pinned"),task_is_pinned?new Toast("Task unpinned from the top of the list","default",3e3,"../img/icon/toast/info-unpinned-icon.svg"):new Toast("Task pinned to the top of the list","default",3e3,"../img/icon/toast/info-pinned-icon.svg")}).catch(e=>{throw e})}catch(t){return new ErrorToast(`Could not ${e.hasClass("pinned")?"un":""}pin task`,t.toString().includes("uid")?"authentication has not been established yet":cleanError(t),2e3)}}function makeTasksFromDoc(e){if(e.exists){let t,a=e.data().tasks,s=$('<div data-role="tasks-list"></div>'),i=$('<div id="todo-container" data-role="todo-container"></div>'),o=!1,n=0;if(a){a.forEach(e=>{e.title||(e.title="Untitled Task"),e.title_clean=e.title.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"),e.title_clean=e.title_clean.replace(/[^a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/? ]/g,"")}),a.sort(sortByDate),a.forEach(e=>{if(!e.is_completed||e.date&&new Date(e.date).getTime()>(new Date).getTime()-day_ms){let a;e.iframe_url?(o=!0,a=`\n            <div class="iframe-content task-card-loading task-card-content" style="background: ${e.iframe_bg?e.iframe_bg:"ffffff"}'"><iframe title="Task Embed Content" src="${e.iframe_url}" style="border: none; border-radius: 15px; overflow:hidden; background: ${e.iframe_bg};" name="vite-task" scrolling="no" frameborder="0" marginheight="0px" marginwidth="0px" height="100%" width="100%"></iframe><div data-role="edit-card" class="task-card-action"><object class="task-card-action-icon edit-icon" aria-label="Task Icon" data="../img/icon/tasks/edit-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/edit-icon.png" /></object><object class="task-card-action-icon editing-icon" aria-label="Task Icon" data="../img/icon/tasks/editing-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/editing-icon.png" /></object></div></div>`):a=`\n            <div class="task-card-content"><div class="task-card-widgets"><div class="task-card-time-widget"><object class="task-card-widget-icon" aria-label="Task Icon" data="../img/icon/tasks/clock-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/clock-icon.png" /></object><span class="task-card-time">${e.time} minutes</span></div><div class="task-card-date-widget"><object class="task-card-widget-icon" aria-label="Task Icon" data="../img/icon/tasks/date-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/date-icon.png" /></object><span class="task-card-time">${e.date&&"priority"!=e.date?e.date:"No Goal Date"}</span></div></div><hr /><div class="task-card-info"><div class="task-card-title" title="${e.title}">${e.title_clean}</div><div class="task-card-tag">${Object.keys(getClassJSON()).includes(e.tag)?getClassJSON()[e.tag]:e.tag}</div></div><div data-role="edit-card" class="task-card-action"><object class="task-card-action-icon edit-icon" aria-label="Task Icon" data="../img/icon/tasks/edit-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/edit-icon.png" /></object><object class="task-card-action-icon editing-icon" aria-label="Task Icon" data="../img/icon/tasks/editing-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/editing-icon.png" /></object></div></div>`,t=getDateText(e.date,e.is_pinned),n!=t&&($("<div></div>",{class:"task-section-header",text:t,"data-date":t,timestamp:e.is_pinned?"Pinned":e.date?e.date:""}).appendTo(s),n=t),delete e.title_clean,$(`<div><div class='session-task-card-title'>${e.title?e.title:"No Title / iframe"}</div></div>`).attr({class:"session-task-card","data-task-json-content":JSON.stringify(e)}).appendTo(i),$(`<div class="task-card${e.iframe_url?" task-iframe-card":""}${e.is_pinned?" pinned":""}${e.is_completed?" completed":""}">\n            <div class="task-card-swipe-pin"><object class="task-card-pin-icon" aria-label="Task Icon" data="../img/icon/tasks/pin-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/pin-icon.png" /></object><object class="task-card-pin-icon alt-icon" aria-label="Task Icon" data="../img/icon/tasks/pin-icon-alt.svg" type="image/svg+xml"><img alt="icon" src="../img/icon/tasks/pin-icon-alt.png" /></object></div>\n            ${a}\n            <div class="task-card-swipe">\n              <div class="task-card-swipe-done"><object class="task-card-swipe-icon" aria-label="Task Icon" data="../img/icon/tasks/done-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/done-icon.png" /></object></div>\n              <div class="task-card-swipe-archive"><object class="task-card-swipe-icon" aria-label="Task Icon" data="../img/icon/tasks/archive-icon.png?was-svg" type="image/png"><img alt="icon" src="../img/icon/tasks/archive-icon.png" /></object></div>\n            </div>`).attr({"data-task-json-content":JSON.stringify(e),style:e.iframe_url?"background: "+e.iframe_bg:""}).appendTo(s)}}),s.children(".task-section-header").each(function(){let e=$(this);e.nextUntil(".task-section-header").addBack().wrapAll(`<div class='task-section' data-date='${e.text()}' data-timestamp='${e.attr("timestamp")}'></div>`)});let e=s.children(".task-section").first();(!e.attr("data-timestamp").includes("-")||new Date(e.attr("data-timestamp")).getTime()>(new Date).getTime()+day_ms)&&e.before(section_break),s.children(".task-section").each(function(){let e=$(this),t=e.next(".task-section");if(t.length){let a=new Date(t.attr("data-timestamp")).getTime(),s=new Date(e.attr("data-timestamp")).getTime();(a-s>day_ms||!new Date(s))&&e.after(section_break)}})}if($(s).text()!=$("[data-role='tasks-list']").text()){console.log("TASKSLIST: replacing"),$("[data-role='tasks-list']").replaceWith(s),$("[data-role='todo-container']").replaceWith(i),o?$("[data-role='vite-add-card']").hide():$("[data-role='vite-add-card']").show(),$(".task-iframe-card iframe").on("load",function(){$(this).closest(".task-card").show().removeClass("task-card-loading")});try{$(".task-card").swipe("destroy"),$(".task-card").swipe({swipeLeft:function(){$(".task-card").removeClass("editing").removeClass("pinning"),$(this).addClass("editing")},swipeRight:function(){$(this).hasClass("editing")?$(this).removeClass("editing"):$(this).closest(".task-card").removeClass("pinning").addClass("pinning").animate({scrollTop:0},750,function(){pinTask($(this)),$(this).removeClass("pinning"),$(this).closest(".task-card").removeClass("pinning")})}})}catch(e){console.warn("could not setup swipe events",e)}}else console.log("TASKSLIST: matched")}}function getDateText(e,t=!1){if(e&&"priority"!=e){if("top"==e||t)return"Pinned";if((new Date).toISOString().split("T")[0]==e)return"Today";{let t=new Date(e).toLocaleDateString("en-us",{weekday:"long",month:"long",day:"numeric",timeZone:"UTC"}),a=t.split(" ")[2],s=["th","st","nd","rd"],i=s[0];if(a>3&&a<21)i=s[0];else switch(a%10){case 1:i=s[1];break;case 2:i=s[2];break;case 3:i=s[3]}return t.split(" ").slice(0,2).join(" ")+" "+a+i}}return"Priority"}const section_break='<div class="time-section-break">Nothing Planned</div>',day_ms=864e5;$(".nav-item").click(function(){$(".nav-item").removeClass("active"),$(this).addClass("active"),$("#carousel").css({left:100*-$(this).index()+"vw"}),$("#carousel").attr("data-page-index",$(this).index()),$("#content").attr("data-page",$(this).prop("id")),$(".carousel-page").removeClass("active"),$("#"+$(this).prop("id")).addClass("active"),$(".task-card").removeClass("editing pinning")}),doClassSelect(),$('[data-role="create-task"]').click(function(){let e={title:$('[data-role="task-info-title"]').val(),tag:$('[data-role="task-info-tag"]')[0].value,time:parseInt($('[data-role="time-radio-group"] input:checked').val())};if(Object.values(e).includes(""))new WarningToast("Please fill out all fields",3e3);else{e.date=$('[data-role="task-info-date"]').val();try{e.date=e.date?new Date(e.date).toISOString().split("T")[0]:""}catch(t){e.date=""}db.collection("users").doc(user.uid).update({tasks:firebase.firestore.FieldValue.arrayUnion(e)}).then(()=>{$('[data-role="task-info-title"], [data-role="task-info-tag"], [data-role="task-info-date"]').val(""),$("#time-30").prop("checked",!0),new Toast("Task created!","default",1e3,"//sander.vonk.one/FocusTime/img/icon/toast/success-icon.svg"),$(".nav-item#home").click()}).catch(e=>{new ErrorToast("Could not save task to userdoc",cleanError(e),2e3)})}}),$("#add .card *").on("change input click",function(){$('[data-role="task-info-title"]').val()&&$('[data-role="task-info-tag"]').val()&&$("[name='time-allocated']:checked").length?$('[data-role="create-task"]').removeClass("disabled"):$('[data-role="create-task"]').addClass("disabled")}),$(document.body).click(function(e){$(e.target).closest(".task-card.editing").length||$(e.target).hasClass("task-card-action")||$(".task-card.editing").removeClass("editing")}),$(document.body).on("click",".task-card-date-widget",function(){$(this).closest(".task-card").removeClass("pinning editing").addClass("pinning").animate({scrollTop:0},750,function(){pinTask($(this)),$(this).removeClass("pinning"),$(this).closest(".task-card").removeClass("pinning")})}),$(document.body).on("click",".task-card-action",function(){$(".task-card").not($(this).closest(".task-card")).removeClass("editing pinning"),$(this).closest(".task-card").toggleClass("editing")}),$(document.body).on("click",".task-card-swipe-archive",function(){$(this).closest(".task-card").addClass("swipe-out"),$(this).closest(".task-card").animate({left:"-100%"},500,function(){try{let e=JSON.parse($(this).attr("data-task-json-content"));$(this).remove(),db.collection("users").doc(user.uid).update({tasks:firebase.firestore.FieldValue.arrayRemove(e),archive:firebase.firestore.FieldValue.arrayUnion(e)}).then(()=>{new Toast("Task archived!","default",1e3,"//sander.vonk.one/FocusTime/img/icon/toast/archive-icon.svg")}).catch(e=>{throw e})}catch(e){new ErrorToast("Could not archive task",cleanError(e),2e3,".")}})}),$(document.body).on("click",".task-card-swipe-done",function(){$(this).closest(".task-card").addClass("completed").removeClass("editing"),$(this).closest(".task-card").animate({top:"0%"},500,function(){try{let e=JSON.parse($(this).attr("data-task-json-content")),t=JSON.parse($(this).attr("data-task-json-content"));if(t.is_completed=!0,e!=t){let a=db.collection("users").doc(user.uid),s=db.batch();s.update(a,{tasks:firebase.firestore.FieldValue.arrayRemove(e)}),s.update(a,{tasks:firebase.firestore.FieldValue.arrayUnion(t)}),s.commit().then(()=>{new Toast("Task marked as done!","default",1e3,"//sander.vonk.one/FocusTime/img/icon/toast/success-icon.svg")}).catch(e=>{throw e})}else console.log("Task already marked as done")}catch(e){new ErrorToast("Could not mark task as done",cleanError(e),2e3,".")}})}),$("#card-completed").click(function(){new Popup(["Completed tasks","Are you sure you want to delete all completed tasks before today?"],"default",1e4,"/FocusTime/img/icon/popup-done.svg",[["removePopup();","Cancel","secondary-action fullborder"],["","","popup-divider"],["removePopup();","Delete","secondary-action blue-button DATA-clear-completed-tasks"],["removePopup();","Archive","primary-action blue-button DATA-clear-completed-old-tasks DATA-save-old-archive"]])}),$("#card-completed").on("contextmenu",function(){new Popup(["Completed tasks","Are you sure you want to delete all completed tasks?"],"default",1e4,"/FocusTime/img/icon/popup-done.svg",[["removePopup();","Cancel","secondary-action fullborder"],["","","popup-divider"],["removePopup();","Delete","secondary-action blue-button DATA-clear-completed-tasks"],["removePopup();","Archive","primary-action blue-button DATA-clear-completed-tasks DATA-save-archive"]])}),$("#card-time").click(function(){$(document.body).toggleClass("full-width-list")}),$(document.body).on("click","[data-role='clear-completed'], .DATA-clear-completed-tasks, .DATA-clear-completed-old-tasks",function(){let e=$(this).attr("data-save-archive")||$(this).hasClass("DATA-save-archive"),t=$(this).attr("DATA-clear-completed-old-tasks")||$(this).hasClass("DATA-save-old-archive");db.collection("users").doc(user.uid).get().then(a=>{let s=a.data().tasks;if(t&&(s=$.grep(s,function(e){return new Date(e.date).getTime()+day_ms<(new Date).getTime()})),s.length>0){let t=$.grep(s,function(e){return e.is_completed}),a={tasks:firebase.firestore.FieldValue.arrayRemove(...t)};e&&(a.archive=firebase.firestore.FieldValue.arrayUnion(...t)),db.collection("users").doc(user.uid).update(a).then(()=>{e?new Toast("Completed tasks archived!","default",1e3,"//sander.vonk.one/FocusTime/img/icon/toast/archive-icon.svg"):new Toast("Completed tasks deleted!","default",1e3,"//sander.vonk.one/FocusTime/img/icon/toast/success-icon.svg")}).catch(e=>{new ErrorToast("Could not clear completed tasks",cleanError(e),2e3,".")})}})}),$('[data-role="add-vite-card"]').click(function(){db.collection("users").doc(user.uid).update({tasks:firebase.firestore.FieldValue.arrayUnion({iframe_url:"/VITE/embed/task.html",iframe_bg:"#1d55a8",date:"top",is_pinned:!0,title:"VITE! French Practice"})}).then(()=>{new Toast("Added VITE! card!","default",4e3,"//sander.vonk.one/VITE/img/icon/concern-icon.svg")}).catch(e=>{new ErrorToast("Could not save VITE! card data userdoc",cleanError(e),2e3)})}),$('[data-role="task-info-date"]').attr({min:(new Date).toISOString().split("T")[0],max:new Date((new Date).getTime()+31536e6).toISOString().split("T")[0]});try{console.log("setting up from cache"),makeTasksFromDoc(docFromCashe()),setupFieldsFromDoc(docFromCashe())}catch(e){console.warn("Could not setup from cashe",e)}$("[data-auth-role='logoutprompt']").click(function(){new Popup(["Sign Out","Are you sure you want to sign out?"],"default",1e4,"",[["removePopup()","Cancel","secondary-action fullborder"],["removePopup()","Yes","primary-action data-auth-logout"]])}),$(document.body).on("click","[data-auth-role='logout'], .data-auth-logout",function(){localStorage.clear(),auth.signOut()}),$(document.body).on("click",".session-task-card",function(){$(this).toggleClass("checked")});